plugins {
    id "com.android.application"
    id 'com.google.gms.google-services'
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file("local.properties")
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader("UTF-8") { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty("flutter.versionCode", "1").toInteger()
def flutterVersionName = localProperties.getProperty("flutter.versionName", "1.0")

android {
    namespace = "com.example.fastfood_app"
    compileSdkVersion 34
    ndkVersion = "21.4.7075529" // Replace with your actual NDK version if different

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = "17"
    }

    defaultConfig {
        applicationId "com.example.fastfood_app"
        minSdkVersion 23
        targetSdkVersion 34
        versionCode flutterVersionCode
        versionName flutterVersionName
    }

    buildTypes {
        release {
            signingConfig signingConfigs.debug // Ensure you have the correct signing configuration for release
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            signingConfig signingConfigs.debug // Ensure you have the correct signing configuration for debug
            minifyEnabled false
            shrinkResources false
        }
    }
}

flutter {
    source = "../.."
}

repositories {
    google()
    mavenCentral()
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach {
    kotlinOptions {
        jvmTarget = "17"
    }
}

tasks.withType(JavaCompile).configureEach {
    options.release.set(17)
}
